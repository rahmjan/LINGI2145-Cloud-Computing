version: "3.2"  # docker-compose version
services:     # list all services for your application
  # database of users
  users-db:
    # fetch pre-build image from a registry on Docker Hub (https://hub.docker.com/)
    image: mexicalli/users-db:latest
    # relative location of Dockerfile
    build: users/src/db
    # expose port 5984 of host node
    ports:
      - published: 5984
        target: 5984
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      restart_policy: # restart if something went wrong
        condition: on-failure
      # /!\ be sure that one of the nodes in your swarm has the label "daemon"
      #     before the deployment of the stack "authentication". More details
      #     in section [Increase the size of your Swarm], link available here:
      #     https://tinyurl.com/y7hh76x5
      placement:
        constraints:
          - node.role == manager

  # server that listens HTTP requests
  users-daemon:
    image: mexicalli/users-daemon:latest
    build: users
    # wait until service db is up
    depends_on: [ "users-db" ]
    # expose port 80 of host node
    ports:
      - published: 3000
        target: 80
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      restart_policy: # restart if something went wrong
        condition: on-failure
      # /!\ be sure that one of the nodes in your swarm has the label "daemon"
      #     before the deployment of the stack "authentication". More details
      #     in section [Increase the size of your Swarm], link available here:
      #     https://tinyurl.com/y7hh76x5
      placement:
        constraints:
          - node.labels.type == daemon

  # Docker user interface for swarms
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - published: 8080
        target: 8080
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints:
          - node.role == manager
